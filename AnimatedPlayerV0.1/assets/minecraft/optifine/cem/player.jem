{
	"credit": "Made with Blockbench",
	"textureSize": [64, 64],
	"models": [
		{
			"part": "head",
			"id": "head",
			"invertAxis": "xy",
			"translate": [0, -24, 0],
			"boxes": [
				{
					"coordinates": [-4, 24, -4, 8, 8, 8],
					"uvNorth": [8, 8, 16, 16],
					"uvEast": [0, 8, 8, 16],
					"uvSouth": [24, 8, 32, 16],
					"uvWest": [16, 8, 24, 16],
					"uvUp": [16, 8, 8, 0],
					"uvDown": [24, 0, 16, 8]
				},
				{
					"coordinates": [-4.5, 23.5, -4.5, 9, 9, 9],
					"uvNorth": [40, 8, 48, 16],
					"uvEast": [32, 8, 40, 16],
					"uvSouth": [56, 8, 64, 16],
					"uvWest": [48, 8, 56, 16],
					"uvUp": [48, 8, 40, 0],
					"uvDown": [56, 0, 48, 8]
				}
			],
			"submodels": [
				{
					"id": "Created_by_FreshLX_for_Fresh_Animations_and_adapted_for_player_by_Traben",
					"invertAxis": "xy",
					"translate": [0, 0, 0]
				},
				{
					"id": "right_eye",
					"invertAxis": "xy",
					"mirrorTexture": "u",
					"translate": [2, 28, -4],
					"submodels": [
						{
							"id": "r_eye_top",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [0, 0, 0.025]
						},
						{
							"id": "r_eye_pupil",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [-0.5, -0.5, 0],
							"submodels": [
								{
									"id": "r_eye_pupil_in",
									"invertAxis": "xy",
									"mirrorTexture": "u",
									"translate": [-0.5, 0, 0],
									"submodels": [
										{
											"id": "r_eye_pupil_ou",
											"invertAxis": "xy",
											"mirrorTexture": "u",
											"translate": [1, 0, 0],
											"submodels": [
												{
													"id": "r_eye_pupil_do",
													"invertAxis": "xy",
													"mirrorTexture": "u",
													"translate": [-0.5, -0.5, 0],
													"submodels": [
														{
															"id": "r_eye_pupil_up",
															"invertAxis": "xy",
															"mirrorTexture": "u",
															"translate": [0, 1, 0],
															"boxes": [
																{
																	"coordinates": [-0.5, -1, -0.07, 1, 1, 0.3],
																	"uvNorth": [7, 7, 8, 8],
																	"uvEast": [7, 7, 8, 8],
																	"uvSouth": [7, 7, 8, 8],
																	"uvWest": [7, 7, 8, 8],
																	"uvUp": [7, 7, 8, 8],
																	"uvDown": [7, 7, 8, 8],
																	"sizeAdd": 0.005
																}
															]
														}
													]
												}
											]
										}
									]
								}
							]
						},
						{
							"id": "right_eye_white",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [1, -1, 0],
							"boxes": [
								{
									"coordinates": [-1, 0, -0.03, 1, 1, 0.25],
									"uvNorth": [6, 7, 7, 8],
									"uvEast": [6, 7, 7, 8],
									"uvSouth": [6, 7, 7, 8],
									"uvWest": [6, 7, 7, 8],
									"uvUp": [6, 7, 7, 8],
									"uvDown": [6, 7, 7, 8]
								}
							]
						},
						{
							"id": "right_eyelid",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [0, -1, 1],
							"submodels": [
								{
									"id": "right_blink",
									"invertAxis": "xy",
									"mirrorTexture": "u",
									"translate": [0, 1, 0],
									"boxes": [
										{
											"coordinates": [-1, -1, -0.08, 2, 1, 0.3],
											"uvNorth": [5, 7, 6, 8],
											"uvEast": [5, 7, 6, 8],
											"uvSouth": [5, 7, 6, 8],
											"uvWest": [5, 7, 6, 8],
											"uvUp": [5, 7, 6, 8],
											"uvDown": [5, 7, 6, 8],
											"sizeAdd": 0.015
										}
									]
								}
							]
						},
						{
							"id": "ctrl_r_pupil",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [0, 0, 0]
						}
					]
				},
				{
					"id": "left_eye",
					"invertAxis": "xy",
					"mirrorTexture": "u",
					"translate": [-2, 28, -4],
					"submodels": [
						{
							"id": "l_eye_top",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [0, 0, 0.025]
						},
						{
							"id": "l_eye_pupil",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [0.5, -0.5, 0],
							"submodels": [
								{
									"id": "l_eye_pupil_in",
									"invertAxis": "xy",
									"mirrorTexture": "u",
									"translate": [-0.5, 0, 0],
									"submodels": [
										{
											"id": "l_eye_pupil_ou",
											"invertAxis": "xy",
											"mirrorTexture": "u",
											"translate": [1, 0, 0],
											"submodels": [
												{
													"id": "l_eye_pupil_do",
													"invertAxis": "xy",
													"mirrorTexture": "u",
													"translate": [-0.5, -0.5, 0],
													"submodels": [
														{
															"id": "l_eye_pupil_up",
															"invertAxis": "xy",
															"mirrorTexture": "u",
															"translate": [0, 1, 0],
															"boxes": [
																{
																	"coordinates": [-0.5, -1, -0.07, 1, 1, 0.3],
																	"uvNorth": [7, 7, 8, 8],
																	"uvEast": [7, 7, 8, 8],
																	"uvSouth": [7, 7, 8, 8],
																	"uvWest": [7, 7, 8, 8],
																	"uvUp": [7, 7, 8, 8],
																	"uvDown": [7, 7, 8, 8],
																	"sizeAdd": 0.005
																}
															]
														}
													]
												}
											]
										}
									]
								}
							]
						},
						{
							"id": "left_eye_white",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [-1, -1, 0],
							"boxes": [
								{
									"coordinates": [0, 0, -0.03, 1, 1, 0.25],
									"uvNorth": [6, 7, 7, 8],
									"uvEast": [6, 7, 7, 8],
									"uvSouth": [6, 7, 7, 8],
									"uvWest": [6, 7, 7, 8],
									"uvUp": [6, 7, 7, 8],
									"uvDown": [6, 7, 7, 8]
								}
							]
						},
						{
							"id": "left_eyelid",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [0, -1, 1],
							"submodels": [
								{
									"id": "left_blink",
									"invertAxis": "xy",
									"mirrorTexture": "u",
									"translate": [0, 1, 0],
									"boxes": [
										{
											"coordinates": [-1, -1, -0.08, 2, 1, 0.3],
											"uvNorth": [5, 7, 6, 8],
											"uvEast": [5, 7, 6, 8],
											"uvSouth": [5, 7, 6, 8],
											"uvWest": [5, 7, 6, 8],
											"uvUp": [5, 7, 6, 8],
											"uvDown": [5, 7, 6, 8],
											"sizeAdd": 0.015
										}
									]
								}
							]
						},
						{
							"id": "ctrl_l_pupil",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [0, 0, 0]
						}
					]
				}
			],
			"animations": [
				{}
			]
		},
		{
			"part": "body",
			"id": "body",
			"invertAxis": "xy",
			"translate": [0, -24, 0],
			"boxes": [
				{
					"coordinates": [-4, 12, -2, 8, 12, 4],
					"uvNorth": [20, 20, 28, 32],
					"uvEast": [16, 20, 20, 32],
					"uvSouth": [32, 20, 40, 32],
					"uvWest": [28, 20, 32, 32],
					"uvUp": [28, 20, 20, 16],
					"uvDown": [36, 16, 28, 20]
				}
			],
			"animations": [
	
				{
					"var.testing": "0",
					"var.r": "(pi*random(id)*2) + (limb_swing/20)*0",
					"var.b": "age /(11 -random(id)*2)",
					"var.ls": "limb_swing/if( limb_speed>0.5, 1.6, 1.1 )",
					"var.swim": "limb_swing/2 +age/4",
					"var.walk": "clamp(limb_speed*6, 0, 1)*clamp(2-limb_speed*3, 0, 1)",
					"var.ylook": "clamp(sin(var.r+age/60)*6, 0, 1)*1.2",
					"var.crossbow": "if(equals(left_arm.ry -torad(40), right_arm.ry +torad(40), torad(30)), 1, 0)",
					"var.pose": "if(is_riding||is_in_water&&!is_on_ground, 0, clamp(1-limb_speed*4, 0, 1))*clamp(random(id)+0.3, 0.3, 1)",
					"var.nov1": "if(var.crossbow==1, 0, clamp(-5.6 +cos(-pi/6 +var.r +age/80)*6, 0, 1)*clamp(2-limb_speed*4, 0, 1) )",
					"var.nov2": "clamp(-39 +cos(-pi/4 +var.r +var.b/20)*40, 0, 1)*clamp(1-limb_speed*2, 0, 1)",
					"var.nov3": " if(var.crossbow==1, clamp(-2 +cos(-pi/4 +var.r +var.b/10)*6, 0, 1)*clamp(2-limb_speed*3, 0, 1), 0)"
				},
				{
					"head.rx": "torad(head_pitch)/1.5 +sin(var.ls*2)/20*limb_speed +if(!is_riding&&!is_on_ground&&is_in_water, cos(var.swim*2)/30 +torad(-10) +torad(10*clamp(limb_speed*8, 0, 1)), 0) +( cos(-pi/3 +var.r+var.b +sin(var.r+var.b))/4 -torad(10) )*var.nov2 +(sin(limb_swing/2)/4 +torad(20))*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
					"head.ry": "torad(head_yaw)/(1.8 -0.5*var.ylook)  +sin(var.r+age/10 +sin(var.r*2+age/5)/2)/6 *var.nov1 +torad(10)*-cos(var.nov3*pi)*var.nov3",
					"head.rz": "-torad(20)*-cos(var.nov3*pi)*var.nov3 +sin(var.r+age/10 +sin(var.r*2+age/5)/2)/20*var.nov1 +cos(limb_swing/3)/3*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
					"head.tx": "sin(torad(45)+var.ls)/3*limb_speed",
					"head.ty": "if(!is_riding&&!is_on_ground&&is_in_water, -sin(var.swim*2)/2          , 0.3) +14*var.count_swim +limb_speed*var.walk -sin(torad(if(limb_speed>0.5, -45, 45))+var.ls*2)*limb_speed +sin(var.r +var.b)/6 +( cos(var.r+var.b +sin(var.r+var.b)*1.5)/2 +0.5 )*var.nov2 +0.5*-cos(var.nov3*pi)*var.nov3 + if(is_sneaking && is_on_ground, 3, 0)",
					"head.tz": "if(!is_riding&&!is_on_ground&&is_in_water, -1*clamp(limb_speed*8, 0, 1), (-2.5*limb_speed) -sin(var.r +var.b)/6 -cos(var.ls*2)/2*clamp(limb_speed*3, 0, 1) ) +(sin(limb_swing/2) +2)*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0) - if(is_sneaking && is_on_ground, 1.3, 0)",
					"headwear.rx": "head.rx",
					"headwear.ry": "head.ry",
					"headwear.rz": "head.rz",
					"headwear.tx": "head.tx *if(is_child, 1.5, 1)",
					"headwear.ty": "head.ty *if(is_child, 1.5, 1)",
					"headwear.tz": "head.tz *if(is_child, 1.5, 1)",
					"headwear.sx": "if(is_child, 1.5, 1)",
					"headwear.sy": "headwear.sx",
					"headwear.sz": "headwear.sx",
					"body.rx": "         if(!is_riding&&!is_on_ground&&is_in_water, torad(7 *clamp(limb_speed*8, 0, 1)), sin(var.r +var.b)/60 +cos(var.ls*2)/18*limb_speed +torad(-2.5)*clamp(1-limb_speed*2, 0, 1) +torad(15)*limb_speed ) +( cos(var.r+var.b +sin(var.r+var.b))/12 )*var.nov2 -(sin(limb_swing/2)/2 +torad(20))/3*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0) + if(is_sneaking && is_on_ground, torad(20), 0)",
					"body.ry": "         if(!is_riding&&!is_on_ground&&is_in_water, sin(var.swim  )/8                            , torad(-7.5*(1+var.crossbow))*var.pose -sin(var.ls)/4*limb_speed*clamp(-1+limb_speed*2, 0, 1) ) +torad(head_yaw)/6*clamp(1-limb_speed*2, 0, 1)",
					"body.rz": "head.rz +if(!is_riding&&!is_on_ground&&is_in_water, sin(var.swim  )/30*clamp(limb_speed*8, 0, 1) , 0) -sin(var.r+age/10 +sin(var.r*2+age/5)/2)/20*var.nov1 -cos(limb_swing/3)/3*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0) +torad(20)*-cos(var.nov3*pi)*var.nov3",
					"body.tx": "head.tx",
					"body.ty": "head.ty -cos(torad(if(limb_speed>0.5, -45, 45))+var.ls*2 +cos(var.ls*2)/2)/1.5*limb_speed -0.5*-cos(var.nov3*pi)*var.nov3 + if(is_sneaking && is_on_ground, 0.1, 0)",
					"body.tz": "head.tz +(0.25*limb_speed) - if(is_sneaking && is_on_ground, -0.5, 0)"
				},
				{
					"r_eye_top.ty": "clamp(head_pitch/60, -0.8, 0.5) +clamp(2*var.nov1, 0, 0.3) +0.3*var.nov3 +(-1.5 -cos(limb_swing/3)/2)/4*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
					"l_eye_top.ty": "clamp(head_pitch/60, -0.8, 0.5) +clamp(2*var.nov1, 0, 0.3) +0.3*var.nov3 +(-1.5 -cos(limb_swing/3)/2)/4*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
					"ctrl_r_pupil.tx": " 0.5 -head_yaw/(80 +160*var.ylook) +(-sin(pi/4+var.r+age/10)*3 -0.3 )*clamp(var.nov1*4, 0, 1)",
					"ctrl_l_pupil.tx": "-0.5 -head_yaw/(80 +160*var.ylook) +(-sin(pi/4+var.r+age/10)*3 +0.3 )*clamp(var.nov1*4, 0, 1)",
					"ctrl_r_pupil.ty": " 0.5 +clamp(head_pitch/80, -0.5, 0.5) +( -cos(var.r+var.b +sin(var.r+var.b) )/4 )*var.nov2 +clamp(2*var.nov1, 0, 0.3) +0.3*var.nov3 +(-1 -cos(limb_swing/3)/2)*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
					"ctrl_l_pupil.ty": "ctrl_r_pupil.ty",
					"right_blink.sy": "clamp(1.5 -abs(sin(var.r+age/8)*6), 0, 1)*clamp(-32 +cos((var.r+age/8)/1.5)*40 +cos((var.r+age/8)/4)*40, 0, 1)",
					"left_blink.sy": " clamp(1.5 -abs(sin(var.r+age/8)*6), 0, 1)*clamp(-32 +cos((var.r+age/8)/1.5)*40 +cos((var.r+age/8)/4)*40, 0, 1)*clamp(1-var.nov3*2, 0, 1) +clamp(-4+var.nov3*6, 0, 1)"
				},
				{
					"right_eye.sz": "if(between(player_pos_x-pos_x, -30, 30)&&between(player_pos_y-pos_y, -30, 30)&&between(player_pos_z-pos_z, -30, 30), 1, 2)",
					"left_eye.sz": "right_eye.sz",
					"right_eye_white.sx": "2",
					"right_eye_white.sy": "clamp(1 -(r_eye_top.ty), 0.5, 3)",
					"r_eye_pupil.tx": "clamp(ctrl_r_pupil.tx, -0.5, 0.5)",
					"r_eye_pupil.ty": "clamp(ctrl_r_pupil.ty, r_eye_top.ty, 1)",
					"r_eye_pupil_up.sy": "clamp(1 -(ctrl_r_pupil.ty-0.5)              , 0.5, clamp(1-r_eye_top.ty, 0.5, 1))",
					"r_eye_pupil_do.sy": "clamp(1 +(ctrl_r_pupil.ty-0.5) -r_eye_top.ty, 0.5, 1)",
					"r_eye_pupil_in.sx": "clamp(1 -(ctrl_r_pupil.tx-0.5)              , 0.75, 1)",
					"r_eye_pupil_ou.sx": "clamp(1 +(ctrl_r_pupil.tx+0.5)              , 1, 1)",
					"right_eyelid.sy": "clamp(right_eye_white.sy, 1, 4)",
					"right_eyelid.sz": "if(right_eyelid.sy==0||right_blink.sy==0, 0, 1)",
					"right_eyelid.tz": "0",
					"left_eye_white.sx": "2",
					"left_eye_white.sy": "clamp(1 -(l_eye_top.ty), 0.5, 3)",
					"l_eye_pupil.tx": "clamp(ctrl_l_pupil.tx, -0.5, 0.5)",
					"l_eye_pupil.ty": "clamp(ctrl_l_pupil.ty, l_eye_top.ty, 1)",
					"l_eye_pupil_up.sy": "clamp(1 -(ctrl_l_pupil.ty-0.5)              , 0.5, clamp(1-l_eye_top.ty, 0.5, 1))",
					"l_eye_pupil_do.sy": "clamp(1 +(ctrl_l_pupil.ty-0.5) -l_eye_top.ty, 0.5, 1)",
					"l_eye_pupil_in.sx": "clamp(1 -(ctrl_l_pupil.tx-0.5)              , 1, 1)",
					"l_eye_pupil_ou.sx": "clamp(1 +(ctrl_l_pupil.tx+0.5)              , 0.75, 1)",
					"left_eyelid.sy": "clamp(left_eye_white.sy, 1, 4)",
					"left_eyelid.sz": "if(left_eyelid.sy==0||left_blink.sy==0, 0, 1)",
					"left_eyelid.tz": "0"
				},
				{
					"right_arm.tx": "body.tx -5 -0.2*var.pose +if(var.crossbow==1, sin(-pi/3+var.ls)*limb_speed +1   +clamp(-head_yaw/20,  0, 3.5), if(!is_riding&&!is_on_ground&&is_in_water,  (0.88 -cos(-pi/8 +var.swim -sin(var.swim)/2 ) -clamp( sin(var.swim), 0, 1.5)              )*clamp(limb_speed*8, 0, 1), (-sin(var.ls)/2*limb_speed )*torad(head_yaw)*clamp(1-limb_speed*2, 0, 1) -0.3 )  )",
					"left_arm.tx": " body.tx +5 +0.2*var.pose +if(var.crossbow==1, sin(-pi/3+var.ls)*limb_speed -0.8 +clamp(-head_yaw/20, -3, 0  ), if(!is_riding&&!is_on_ground&&is_in_water, -(0.88 -cos(-pi/8 +var.swim -sin(var.swim)/2 ) -clamp( sin(var.swim), 0, 1.5)              )*clamp(limb_speed*8, 0, 1), ( sin(var.ls)/2*limb_speed )*torad(head_yaw)*clamp(1-limb_speed*2, 0, 1) +0.3 )  )",
					"right_arm.ty": "body.ty +2 +if(var.crossbow==1, 0.5*clamp(limb_speed*1.5, 0, 1)  *(1-var.nov3) +cos(var.ls*2)/3*limb_speed -0.3*-cos(var.nov3*pi)*var.nov3, 0) +if(!is_riding&&!is_on_ground&&is_in_water, (0.5 -cos(var.swim)/2)*clamp(  limb_speed*8, 0, 1)                                                                     , sin(var.r +var.b-torad(60))/7                                                                              +if(is_riding, 1, 0) +(0.5)*var.pose ) +( cos(-pi/3 +var.r+var.b +sin(var.r+var.b)*1.5) )*var.nov2",
					"left_arm.ty": " body.ty +2 +if(var.crossbow==1, 0.5*clamp(limb_speed*1.5, 0, 1)  *(1-var.nov3) +cos(var.ls*2)/3*limb_speed                                , 0) +if(!is_riding&&!is_on_ground&&is_in_water, (0.5 -cos(var.swim)/2)*clamp(  limb_speed*8, 0, 1)                                                                     , sin(var.r +var.b-torad(60))/7                                                                              +if(is_riding, 1, 0) +(0.5)*var.pose ) +( cos(-pi/3 +var.r+var.b +sin(var.r+var.b)*1.5) )*var.nov2",
					"right_arm.tz": "            if(var.crossbow==1, -2 +clamp(limb_speed*1.5, 0, 1)  *(1-var.nov3) +clamp( head_yaw/30, -2, 2) -sin(torad(-30)+var.ls)*limb_speed, if(!is_riding&&!is_on_ground&&is_in_water, 1 -cos(var.swim)*2 *clamp(1-limb_speed*8, 0, 1) +head.tz +(-1 +cos(-pi/8 +var.swim)*2 )*clamp(limb_speed*8, 0, 1), (-2*limb_speed) -sin(torad(-30)+var.ls)*3*limb_speed -sin(var.r +var.b)/6 +torad(head_yaw)*clamp(1-limb_speed*2, 0, 1) +if(is_riding, -2, 0) ) ) +(-0.75*(1+var.crossbow))*var.pose +(sin(limb_swing/2) +2)*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
					"left_arm.tz": "             if(var.crossbow==1, -2 -clamp(limb_speed*1.5, 0, 1)*2*(1-var.nov3) +clamp(-head_yaw/30, -3, 4) +sin(torad(-30)+var.ls)*limb_speed, if(!is_riding&&!is_on_ground&&is_in_water, 1 -cos(var.swim)*2 *clamp(1-limb_speed*8, 0, 1) +head.tz +(-1 +cos(-pi/8 +var.swim)*2 )*clamp(limb_speed*8, 0, 1), (-2*limb_speed) +sin(torad(-30)+var.ls)*3*limb_speed -sin(var.r +var.b)/6 -torad(head_yaw)*clamp(1-limb_speed*2, 0, 1) +if(is_riding, -2, 0) ) ) +( 0.75*(1+var.crossbow))*var.pose +(sin(limb_swing/2) +2)*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)"
				},
				{
					"right_leg.rx": "torad(10)*       limb_speed            +if(is_riding, torad(-80), clamp(torad(- 5)+limb_speed  , torad(- 5), 0)*(1-var.dance) +(torad(2)+sin(torad( 20)+var.b)/42) +( sin(var.ls) )/if(is_child, 1, if(limb_speed>=0.6, 1.5, 0.8))*limb_speed) +clamp(-torad(head_yaw)/30, -torad(5), torad(5)) +if(var.melee_l==1, -sin(pi*swing_progress)/5, -sin(pi*swing_progress)/5*if(var.melee_r==1||var.melee_l==1, 1, 0)) +(-sin(time/7*pi)/15 +torad(8) )*var.dance",
					"left_leg.rx": " torad(10)*       limb_speed            +if(is_riding, torad(-80), clamp(torad(  5)-limb_speed  , 0, torad(  5))*(1-var.dance) +(torad(2)+sin(torad(-20)+var.b)/35) +(-sin(var.ls) )/if(is_child, 1, if(limb_speed>=0.6, 1.5, 0.8))*limb_speed) +clamp( torad(head_yaw)/30, -torad(5), torad(5)) +if(var.melee_l==1, -sin(pi*swing_progress)/5, -sin(pi*swing_progress)/5*if(var.melee_r==1||var.melee_l==1, 1, 0)) +( sin(time/7*pi)/15 +torad(8) )*var.dance",
					"right_leg.ry": "torad( 5)*clamp( limb_speed*1.5, 0, 1) +if(is_riding, torad( 20), clamp(torad( 15)-limb_speed  , 0, torad( 15))*if(is_child, 1  , 0          )) +if(var.melee_r==1, torad( 20)*limb_speed, 0) +clamp(-sin(var.ls)/4*clamp(if(is_child, limb_speed*1.5, -cos(limb_speed*pi)), 0, 1), torad(-10), 0) +clamp(torad( 10)-limb_speed*2, 0, torad( 10))*var.dance",
					"left_leg.ry": " torad(-5)*clamp( limb_speed*1.5, 0, 1) +if(is_riding, torad(-20), clamp(torad(-30)+limb_speed*2, torad(-30), 0)*if(is_child, 0.5, 1-var.dance)) +if(var.melee_l==1, torad(-20)*limb_speed, 0) +clamp(-sin(var.ls)/4*clamp(if(is_child, limb_speed*1.5, -cos(limb_speed*pi)), 0, 1), 0, torad( 10)) +clamp(torad(-10)+limb_speed*2, torad(-10), 0)*var.dance",
					"right_leg.rz": "                                        if(is_riding, 0         , clamp(torad(2.5)-limb_speed  , 0, torad(2.5))*(1-var.dance) +torad( 3)) +sin(var.ls)/8*limb_speed/1.2 +if(var.melee_r==1, -sin(pi*swing_progress)/8  +sin(var.ls)/3*limb_speed +torad(10)*limb_speed, var.melee_l==1, sin(pi*swing_progress)/8                            +torad( 3)*limb_speed, 0) +if(var.melee_r==1||var.melee_l==1, -sin(var.ls)/8*limb_speed, 0) +( cos(time/7*pi)/12 )*var.dance",
					"left_leg.rz": "                                         if(is_riding, 0         , clamp(torad(- 5)+limb_speed  , torad(- 5), 0)*(1-var.dance) +torad(-3)) +sin(var.ls)/8*limb_speed/1.2 +if(var.melee_r==1, torad(-3)*limb_speed                                                      , var.melee_l==1, sin(pi*swing_progress)/8 +sin(var.ls)/3*limb_speed +torad(-10)*limb_speed, 0) +if(var.melee_r==1||var.melee_l==1, -sin(var.ls)/8*limb_speed, 0) +( cos(time/7*pi)/12 )*var.dance",
					"right_leg.tx": "-2 +clamp(-0.25+limb_speed,-0.25, 0) +if(is_riding, 0, if(var.melee_l==1, sin(pi*swing_progress), -sin(pi*swing_progress)*if(var.melee_r==1||var.melee_l==1, 1, 0))                                                      ) +cos(time/7*pi)*var.dance",
					"left_leg.tx": "  2 +clamp( 0.25-limb_speed, 0, 0.25) +if(is_riding, 0, if(var.melee_l==1, sin(pi*swing_progress), -sin(pi*swing_progress)*if(var.melee_r==1||var.melee_l==1, 1, 0)) +sin(torad(-20)+var.b)/6*if(is_child, 0, 1-var.dance)) +cos(time/7*pi)*var.dance",
					"right_leg.ty": " 0.1 +clamp(12 +cos(if(limb_speed>=0.6, torad(-30), 0)+var.ls)*2*clamp(limb_speed*2, 0, 2) +clamp(-1+limb_speed*1.5, 0, 1) , 0, 12.2) +if(is_riding, -1, 0) +clamp( (-sin(var.ls) +body.ty)*clamp(if(is_child, limb_speed*1.5, -cos(limb_speed*pi)), 0, 1), -4, 0)",
					"left_leg.ty": "  0.1 +clamp(12 -cos(if(limb_speed>=0.6, torad(-30), 0)+var.ls)*2*clamp(limb_speed*2, 0, 2) +clamp(-1+limb_speed*1.5, 0, 1) , 0, 12.2) +if(is_riding, -1, 0) +clamp( ( sin(var.ls) +body.ty)*clamp(if(is_child, limb_speed*1.5, -cos(limb_speed*pi)), 0, 1), -4, 0)",
					"right_leg.tz": "-0.1 +clamp( 3 +cos(                                   var.ls)*6*clamp(limb_speed*2, 0, 1), -6, 1)*1.2 +if(is_riding, -2, sin(pi*swing_progress)*if(var.melee_r==1||var.melee_l==1, 2, 0) +clamp( torad(head_yaw)/2, -pi/4, pi/4) -sin(torad( 20)+var.b)/4) +if(is_riding, 0, var.melee_r==1, clamp(-1+limb_speed*4, -1, 0),var.melee_l==1, clamp(-2+limb_speed*4, -2, 0), clamp(-1.5+limb_speed*6, -1.5, 0)*if(is_child, 0, 1-var.dance)) +clamp(-2+limb_speed*4, -2, 0)*if(is_child, 1, var.dance) +sin(time/7*pi)*0.8*var.dance + if(is_sneaking && is_on_ground, 0.7, 0)",
					"left_leg.tz": " -0.1 +clamp( 3 -cos(                                   var.ls)*6*clamp(limb_speed*2, 0, 1), -6, 1)*1.2 +if(is_riding, -2, sin(pi*swing_progress)*if(var.melee_r==1||var.melee_l==1, 2, 0) +clamp(-torad(head_yaw)/2, -pi/4, pi/4) -sin(torad(-20)+var.b)/4) +if(is_riding, 0, var.melee_r==1, clamp(-1+limb_speed*4, -1, 0),var.melee_l==1,                            0 , clamp(-0.5+limb_speed*2, -0.5, 0)*if(is_child, 0, 1-var.dance)) +clamp(-2+limb_speed*4, -2, 0)*if(is_child, 1, var.dance) -sin(time/7*pi)*0.8*var.dance + if(is_sneaking && is_on_ground, 0.7, 0)"
				},
				{
					"cloak.rx": "body.rx - if(is_sneaking && is_on_ground, 0.5, 0)",
					"cloak.ry": "body.ry",
					"cloak.rz": "body.rz",
					"cloak.tx": "-body.tx",
					"cloak.ty": "body.ty - if(is_sneaking && is_on_ground, 2.5, 0)",
					"cloak.tz": "-1 + if(is_sneaking && is_on_ground, 3, 0)"
				},
				{
					"var.y": "var.y2",
					"var.y2": "var.y3",
					"var.y3": "head.ry",
					"var.z": "var.z2",
					"var.z2": "var.z3",
					"var.z3": "rot_y"
				},
				{
					"right_sleeve.rx": "right_arm.rx",
					"right_sleeve.ry": "right_arm.ry",
					"right_sleeve.rz": "right_arm.rz",
					"right_sleeve.tx": "right_arm.tx",
					"right_sleeve.ty": "right_arm.ty",
					"right_sleeve.tz": "right_arm.tz",
					"left_sleeve.rx": "left_arm.rx",
					"left_sleeve.ry": "left_arm.ry",
					"left_sleeve.rz": "left_arm.rz",
					"left_sleeve.tx": "left_arm.tx",
					"left_sleeve.ty": "left_arm.ty",
					"left_sleeve.tz": "left_arm.tz",
					"jacket.rx": "body.rx",
					"jacket.ry": "body.ry",
					"jacket.rz": "body.rz",
					"jacket.tx": "body.tx",
					"jacket.ty": "body.ty",
					"jacket.tz": "body.tz",
					"right_pants.rx": "right_leg.rx",
					"right_pants.ry": "right_leg.ry",
					"right_pants.rz": "right_leg.rz",
					"right_pants.tx": "right_leg.tx",
					"right_pants.ty": "right_leg.ty",
					"right_pants.tz": "right_leg.tz",
					"left_pants.rx": "left_leg.rx",
					"left_pants.ry": "left_leg.ry",
					"left_pants.rz": "left_leg.rz",
					"left_pants.tx": "left_leg.tx",
					"left_pants.ty": "left_leg.ty",
					"left_pants.tz": "left_leg.tz"
				}
			]
		},
		{
			"part": "right_arm",
			"id": "right_arm",
			"invertAxis": "xy",
			"translate": [-5, -22, 0],
			"boxes": [
				{
					"coordinates": [4, 12, -2, 4, 12, 4],
					"uvNorth": [44, 20, 48, 32],
					"uvEast": [40, 20, 44, 32],
					"uvSouth": [52, 20, 56, 32],
					"uvWest": [48, 20, 52, 32],
					"uvUp": [48, 20, 44, 16],
					"uvDown": [52, 16, 48, 20]
				}
			]
		},
		{
			"part": "left_arm",
			"id": "left_arm",
			"invertAxis": "xy",
			"translate": [5, -22, 0],
			"boxes": [
				{
					"coordinates": [-8, 12, -2, 4, 12, 4],
					"uvNorth": [36, 52, 40, 64],
					"uvEast": [32, 52, 36, 64],
					"uvSouth": [44, 52, 48, 64],
					"uvWest": [40, 52, 44, 64],
					"uvUp": [40, 52, 36, 48],
					"uvDown": [44, 48, 40, 52]
				}
			]
		},
		{
			"part": "left_leg",
			"id": "left_leg",
			"invertAxis": "xy",
			"translate": [2, -12, 0],
			"boxes": [
				{"coordinates": [-4, 0, -2, 4, 12, 4], "textureOffset": [16, 48]}
			]
		},
		{
			"part": "right_leg",
			"id": "right_leg",
			"invertAxis": "xy",
			"translate": [-2, -12, 0],
			"boxes": [
				{"coordinates": [0, 0, -2, 4, 12, 4], "textureOffset": [0, 16]}
			]
		},
		{
			"part": "cloak",
			"id": "cloak",
			"invertAxis": "xy",
			"translate": [0, -24, -2],
			"boxes": [
				{
					"coordinates": [-5, 8, 2, 10, 16, 1],
					"uvNorth": [1, 2, 11, 34],
					"uvEast": [0, 2, 1, 34],
					"uvSouth": [12, 2, 22, 34],
					"uvWest": [11, 2, 12, 34],
					"uvUp": [1, 0, 11, 2],
					"uvDown": [12, 0, 22, 2]
				}
			]
		},
		{
			"part": "headwear",
			"id": "headwear",
			"invertAxis": "xy",
			"translate": [0, -24, 0],
			"boxes": [
				{
					"coordinates": [-4.5, 23.5, -4.5, 9, 9, 9],
					"uvNorth": [40, 8, 48, 16],
					"uvEast": [32, 8, 40, 16],
					"uvSouth": [56, 8, 64, 16],
					"uvWest": [48, 8, 56, 16],
					"uvUp": [48, 8, 40, 0],
					"uvDown": [56, 0, 48, 8]
				}
			]
		},
		{
			"part": "jacket",
			"id": "jacket",
			"invertAxis": "xy",
			"translate": [0, -24, 0],
			"boxes": [
				{
					"coordinates": [-4.25, 11.75, -2.25, 8.5, 12.5, 4.5],
					"uvNorth": [20, 36, 28, 48],
					"uvEast": [16, 36, 20, 48],
					"uvSouth": [32, 36, 40, 48],
					"uvWest": [28, 36, 32, 48],
					"uvUp": [28, 36, 20, 32],
					"uvDown": [36, 32, 28, 36]
				}
			]
		},
		{
			"part": "right_sleeve",
			"id": "right_sleeve",
			"invertAxis": "xy",
			"translate": [-5, -22, 0],
			"boxes": [
				{
					"coordinates": [3.75, 11.75, -2.25, 4.5, 12.5, 4.5],
					"uvNorth": [44, 36, 48, 48],
					"uvEast": [40, 36, 44, 48],
					"uvSouth": [52, 36, 56, 48],
					"uvWest": [48, 36, 52, 48],
					"uvUp": [48, 36, 44, 32],
					"uvDown": [52, 32, 48, 36]
				}
			]
		},
		{
			"part": "left_sleeve",
			"id": "left_sleeve",
			"invertAxis": "xy",
			"translate": [5, -22, 0],
			"boxes": [
				{
					"coordinates": [-8.25, 11.75, -2.25, 4.5, 12.5, 4.5],
					"uvNorth": [52, 52, 56, 64],
					"uvEast": [48, 52, 52, 64],
					"uvSouth": [60, 52, 64, 64],
					"uvWest": [56, 52, 60, 64],
					"uvUp": [56, 52, 52, 48],
					"uvDown": [60, 48, 56, 52]
				}
			]
		},
		{
			"part": "left_pants",
			"id": "left_pants",
			"invertAxis": "xy",
			"translate": [2, -12, 0],
			"boxes": [
				{
					"coordinates": [-4.25, -0.25, -2.25, 4.5, 12.5, 4.5],
					"uvNorth": [4, 52, 8, 64],
					"uvEast": [0, 52, 4, 64],
					"uvSouth": [12, 52, 16, 64],
					"uvWest": [8, 52, 12, 64],
					"uvUp": [8, 52, 4, 48],
					"uvDown": [12, 48, 8, 52]
				}
			]
		},
		{
			"part": "right_pants",
			"id": "right_pants",
			"invertAxis": "xy",
			"translate": [-2, -12, 0],
			"boxes": [
				{
					"coordinates": [-0.25, -0.25, -2.25, 4.5, 12.5, 4.5],
					"uvNorth": [4, 36, 8, 48],
					"uvEast": [0, 36, 4, 48],
					"uvSouth": [12, 36, 16, 48],
					"uvWest": [8, 36, 12, 48],
					"uvUp": [8, 36, 4, 32],
					"uvDown": [12, 32, 8, 36]
				}
			]
		}
	]
}